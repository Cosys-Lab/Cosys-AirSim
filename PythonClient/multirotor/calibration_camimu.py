import setup_path 
import cosysairsim as airsim
import numpy as np
import time

client = airsim.MultirotorClient()
client.confirmConnection()
client.enableApiControl(True)
client.armDisarm(True)
time.sleep(1)
client.moveToPositionAsync(0.5, 0, -2, 2).join()
time.sleep(2)

client.moveByAngleZAsync(np.pi / 16, 0, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(-np.pi / 16, 0, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, -np.pi / 20, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, np.pi / 20, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, 0, -2, -np.pi / 10, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, 0, -2, np.pi / 10, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, 0, -2, -np.pi / 20, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()

client.moveByVelocityAsync(0, 0.5, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, -0.5, 0, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0.5, -0.2, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, -0.5, 0.2, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(-0.5, 0, 0, 1).join()
client.moveByVelocityAsync(0.5, 0, 0, 2).join()
client.moveByVelocityAsync(-0.5, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0.3, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0, -1, 0.5).join()
client.moveByVelocityAsync(0, 0, 1, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()

client.moveByAngleZAsync(np.pi / 16, 0, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(-np.pi / 16, 0, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, -np.pi / 20, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, np.pi / 20, -2, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, 0, -2, -np.pi / 10, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, 0, -2, np.pi / 10, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByAngleZAsync(0, 0, -2, -np.pi / 20, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()

client.moveByVelocityAsync(0, 0.5, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, -0.5, 0, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0.5, -0.2, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, -0.5, 0.2, 2).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(-0.5, 0, 0, 1).join()
client.moveByVelocityAsync(0.5, 0, 0, 2).join()
client.moveByVelocityAsync(-0.5, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0.3, 0, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()
client.moveByVelocityAsync(0, 0, -1, 0.5).join()
client.moveByVelocityAsync(0, 0, 1, 1).join()
client.moveByVelocityAsync(0, 0, 0, 1).join()